<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>c/c++编译流程</title>
      <link href="/compilation-process.html"/>
      <url>/compilation-process.html</url>
      
        <content type="html"><![CDATA[<p>c/c++程序从源代码到二进制程序的编译一般依靠编译工具GCC(GNU Compiler Collection)实现，具体流程分为4步：</p><ol><li>预处理(Preprocessing)</li><li>编译(Compilation)</li><li>汇编(Assemble)</li><li>链接(Linking)</li></ol><h1 id="1-预处理"><a href="#1-预处理" class="headerlink" title="1.预处理"></a>1.预处理</h1><p>对.c或.h或.cpp文件进行预处理，使用预处理器将头文件内容复制到源代码中、删除注释、对宏进行替换等。处理后的文件后缀为.i，实际为完整的源代码，此时文件大小会大许多。gcc命令为:<br><code>gcc -E test.c -o test.i</code><br>-o是指定输出文件名。  </p><h1 id="2-编译"><a href="#2-编译" class="headerlink" title="2.编译"></a>2.编译</h1><p>将预处理文件转换为汇编语言的形式即汇编代码，处理后的文件后缀为.s。编译完后文件已经变得很小了。gcc命令为：<br><code>gcc -S test.i -o test.s</code></p><h1 id="3-汇编"><a href="#3-汇编" class="headerlink" title="3.汇编"></a>3.汇编</h1><p>对汇编代码进一步翻译为机器码，形成目标代码，处理后文件后缀为.o。gcc命令为：<br><code>gcc -c test.s -o test.o</code></p><h1 id="4-链接"><a href="#4-链接" class="headerlink" title="4.链接"></a>4.链接</h1><p>使用链接器将目标代码与其他目标代码、库代码、启动代码等链接起来生成可执行程序，处理后文件后缀为.out(windows下为.exe)。gcc命令为：<br><code>gcc test.o -o test</code><br>gcc工作流程示意图： </p><div align="center"><img src="../img/Compilation_process_img/gcc%20compilation%20process.PNG" width="60%/"></div><p>注：直接编译为可执行程序的命令为：<code> gcc &lt;文件名&gt; -o &lt;生成的文件名&gt;</code><br>　　gcc命令对于c代码，g++命令对应c++代码。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>机器学习笔记</title>
      <link href="/machine-learning-notes.html"/>
      <url>/machine-learning-notes.html</url>
      
        <content type="html"><![CDATA[<pre><code>机器学习三要素：数据、算法、模型简单来说，机器学习就是利用已有的数据通过选择的算法训练模型，用以预测分析。</code></pre><h1 id="1-机器学习算法分类"><a href="#1-机器学习算法分类" class="headerlink" title="1 机器学习算法分类"></a>1 机器学习算法分类</h1><ul><li><strong>监督学习</strong>：输入的数据有标签。<br>  对于离散数据，标签用于分类，可以归结为分类问题。<br>  对于连续数据标签，归结为回归问题。</li><li><strong>无监督学习</strong>：输入数据无标签。</li></ul><h1 id="2-开发流程"><a href="#2-开发流程" class="headerlink" title="2 开发流程"></a>2 开发流程</h1><ol><li>收集数据。要考虑到后续分析所需要的数据，选取重要特征、足够多的数据等。</li><li>准备数据。实际中，收集到的数据可能存在很多问题，需要进行数据清洗。然后再将其划分为训练集(占比较大)和测试集。</li><li>选择模型。根据实际情况，选择合适的模型。监督学习模型和无监督学习模型。</li><li>训练。使用训练集数据对选择的模型进行训练，需要反复测试。</li><li>评估。对训练出的模型，用测试集进行测试，检验其性能好坏。评估指标主要有：准确率、召回率、F值。</li><li>参数调整。主要是调整参数对模型进行改进。</li><li>预测。将模型应用于实际，对相关问题进行预测。</li></ol><h1 id="3-学习工具"><a href="#3-学习工具" class="headerlink" title="3 学习工具"></a>3 学习工具</h1><ol><li>机器学习库：sklearn。Python的机器学习工具，包含许多机器学习算法的实现。</li><li>数据集：scikit-learn、kaggle、UCI</li><li>开发工具：pycharm、vscode、Jupyter notebook(网页版可视化)</li></ol><h1 id="4-特征工程"><a href="#4-特征工程" class="headerlink" title="4 特征工程"></a>4 特征工程</h1><p>  在使用模型进行训练前，需要对原始数据展开特征工程，目的是为了更高效的利用算法，能影响机器学习的效果。<br>  包含三个步骤：特征提取、特征预处理、特征降维。</p><h2 id="4-1-特征提取"><a href="#4-1-特征提取" class="headerlink" title="4.1 特征提取"></a>4.1 特征提取</h2><pre><code>从原本的数据集中提取出适合机器学习的数据。  主要是为了解决三个问题:  </code></pre><ul><li>原始数据特征中的强相关性造成的冗余信息。  </li><li>原始数据十分稀疏.</li><li>原始数据维度较大。<blockquote><p>API: sklearn.feature_extraction</p></blockquote></li></ul><h2 id="4-2-特征预处理"><a href="#4-2-特征预处理" class="headerlink" title="4.2 特征预处理"></a>4.2 特征预处理</h2><p>  对特征无量纲化，目的是让特征处于同等地位。常见方法有：归一化和标准化。</p><h3 id="4-2-1-归一化"><a href="#4-2-1-归一化" class="headerlink" title="4.2.1 归一化"></a>4.2.1 归一化</h3><p>  将原始数据映射到[0，1]之间。公式为：<br>  $x’=\frac {x-min}{max-min}$　　　$x’’=x’*(mx-mi)+mi$<br>  其中，ｘ’’为最终结果，max为一列中的最大值，min为一列中的最小值。mx,mi为指定映射的区间，通常mx=1,mi=0<br>  缺点：当数据存在较多异常点是，会影响归一化结果。该方法鲁棒性差，只适合精确小数据场景。  </p><blockquote><p>API: sklearn.preprocessing.MinMaxScaler(feature_range=(0,1)…)</p></blockquote><h3 id="4-2-2-标准化"><a href="#4-2-2-标准化" class="headerlink" title="4.2.2 标准化"></a>4.2.2 标准化</h3><p>  将数据变换为均值为0，标准差为1的范围内。公式为:<br>  $x’=\frac{x-\overline x}{\sigma}$<br>  作用于每一列，$\overline x$ 为平均值，$\sigma$ 为标准差<br>  平均值和标准差受异常值影响较小，标准化方法能一定程度上克服异常点带来的干扰。适用于样本数量大的情况。</p><blockquote><p>API: sklearn.preprocessing.StandardScaler()  </p></blockquote><h2 id="4-3-特征降维"><a href="#4-3-特征降维" class="headerlink" title="4.3 特征降维"></a>4.3 特征降维</h2><p>  减少相关性较强的特征，得到一组不相关的主变量。常见方法有：特征选择和主成分分析。  </p><h3 id="4-3-1-特征选择"><a href="#4-3-1-特征选择" class="headerlink" title="4.3.1 特征选择"></a>4.3.1 特征选择</h3><p>  在原有的冗余特征中找出主要特征。</p><ul><li>Filter(过滤式): <ul><li>方差选择法：过滤低方差特征<blockquote><p>API: sklearn.feature_selection.VarianceThreshold(threshold = 0.0)  </p></blockquote></li><li>相关系数： 过滤相关程度高的特征,常用有皮尔逊相关系数。对于相关性程度高的特征：<ol><li>选取其中一个</li><li>加权求和</li><li>主成分分析<blockquote><p>API: scipy.stats.pearsonr</p></blockquote></li></ol></li></ul></li><li>Embedded(嵌入式)：<ul><li>决策树</li><li>正则化 <h3 id="4-3-2-主成分分析-PCA"><a href="#4-3-2-主成分分析-PCA" class="headerlink" title="4.3.2 主成分分析(PCA)"></a>4.3.2 主成分分析(PCA)</h3>将n维特征映射到k维上，实现特征降维，减少复杂度。一般用于回归分析或聚类。<blockquote><p>API: sklearn.decomposition.PCA(n_components=None)  </p></blockquote><h1 id="5-模型选择与调优"><a href="#5-模型选择与调优" class="headerlink" title="5. 模型选择与调优"></a>5. 模型选择与调优</h1><p>一般来说，模型调优有3个方向：选择更好的算法，调优模型参数，改进数据。这里简单说下模型参数调优。<br>模型参数调优有两步：交叉验证(cross validation)和超参数搜索-网格搜索(Grid Search)。</p></li></ul></li><li>交叉验证：对于训练集数据，再次将其划分为训练集和验证集，用以评估模型预测准确性，让模型更加准确可信。限制模型过拟合、欠拟合等问题。</li><li>超参数搜索-网格搜索:对于算法中需要自定义的参数，叫超参数。对模型预设几种超参数组合，同时训练，选出最优参数组合。<blockquote><p>API: sklearn.model_selection.GridSearchCV  (同时进行交叉验证和网格搜索)</p></blockquote></li></ul><h1 id="6-总结"><a href="#6-总结" class="headerlink" title="6.总结"></a>6.总结</h1><p>机器学习实战流程：</p><ol><li>导入数据</li><li>划分数据集</li><li>特征工程</li><li>模型训练与调优</li><li>模型评估</li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/hello-world.html"/>
      <url>/hello-world.html</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
